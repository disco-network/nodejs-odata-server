{"version":3,"sources":["src/adapter/sparql_mappings.ts"],"names":[],"mappings":"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","file":"src/adapter/sparql_mappings.js","sourcesContent":["/** @module */\n\n/**\n * Maps an OData property hierarchy to the corresponding SPARQL variables.\n * Additionally, we use it to remember which properties will show up in the\n * query result.\n */\nexport class StructuredSparqlVariableMapping {\n  private elementaryProperties: SparqlVariableMapping<string>;\n  private complexProperties: SparqlVariableMapping<StructuredSparqlVariableMapping>;\n\n  constructor(private variableName: string, vargen: SparqlVariableGenerator) {\n    let complexVargen = new ComplexSparqlVariableGenerator(vargen);\n    this.elementaryProperties = new SparqlVariableMapping(vargen);\n    this.complexProperties = new SparqlVariableMapping(complexVargen);\n  }\n\n  public getVariable(): string {\n    return this.variableName;\n  }\n\n  /**\n   * Registers an elementary property in this mapping if it does not exist yet\n   * and returns the SPARQL variable name.\n   */\n  public getElementaryPropertyVariable(name: string): string {\n    return this.elementaryProperties.getPropertyVariable(name);\n  }\n\n  /**\n   * Registers an complex property in this mapping if it does not exist yet\n   * and returns the structured mapping.\n   */\n  public getComplexProperty(name: string): StructuredSparqlVariableMapping {\n    return this.complexProperties.getPropertyVariable(name);\n  }\n\n  public elementaryPropertyExists(name: string): boolean {\n    return this.elementaryProperties.mappingExists(name);\n  }\n\n  public complexPropertyExists(name: string): boolean {\n    return this.complexProperties.mappingExists(name);\n  }\n\n  public forEachElementaryProperty(fn: (prop: string, variable: string) => void): void {\n    this.elementaryProperties.forEach(fn);\n  }\n\n  public forEachComplexProperty(fn: (prop: string, variable: StructuredSparqlVariableMapping) => void): void {\n    this.complexProperties.forEach(fn);\n  }\n\n  public isEmpty(): boolean {\n    return this.elementaryProperties.isEmpty() && this.complexProperties.isEmpty();\n  }\n}\n\n/**\n * Maps property names to their unique SPARQL variable name.\n */\nexport class SparqlVariableMapping<Variable> {\n  private map: Object;\n\n  constructor(private vargen: VariableGenerator<Variable>) { }\n  public getPropertyVariable(propertyName: string) {\n    this.map = this.map || {};\n    return this.map[propertyName] = this.map[propertyName] || this.vargen.next();\n  }\n\n  public mappingExists(propertyName: string): boolean {\n    return this.map != null && this.map[propertyName] != null;\n  }\n\n  public forEach(fn: (prop: string, variable: Variable) => void): void {\n    for (let key in this.map) {\n      fn(key, this.map[key]);\n    }\n  }\n\n  public isEmpty(): boolean {\n    return this.map == null || Object.keys(this.map).length === 0;\n  }\n}\n\n/**\n * Generates instances of StructuredSparqlVariableMapping.\n */\nexport class ComplexSparqlVariableGenerator implements VariableGenerator<StructuredSparqlVariableMapping> {\n  constructor(private vargen: SparqlVariableGenerator) {}\n  public next(): StructuredSparqlVariableMapping {\n    return new StructuredSparqlVariableMapping(this.vargen.next(), this.vargen);\n  }\n}\n\nexport class SparqlVariableGenerator implements VariableGenerator<string> {\n  private i: number = -1;\n  public next(): string {\n    return \"?x\" + (++this.i).toString();\n  }\n}\n\nexport interface VariableGenerator<Variable> {\n  next(): Variable;\n}\n"],"sourceRoot":"/source/"}