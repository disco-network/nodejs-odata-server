{"version":3,"sources":["spec/integrationtest_query_spec.ts"],"names":[],"mappings":";AAAA,IAAO,gBAAgB,WAAW,6BAA6B,CAAC,CAAC;AACjE,IAAO,oBAAoB,WAAW,+BAA+B,CAAC,CAAC;AACvE,IAAO,QAAQ,WAAW,UAAU,CAAC,CAAC;AAEtC,QAAQ,CAAC,kCAAkC,EAAE;IAE3C,eAAe,CAAC,QAAQ,EAAE,UAAA,MAAM;QAC9B,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC3B,aAAa,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,eAAe,CAAC,wBAAwB,EAAE,UAAA,MAAM;QAC9C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC3B,aAAa,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;YACrB;gBACE,EAAE,EAAE,GAAG;gBACP,SAAS,EAAE,GAAG;gBACd,OAAO,EAAE;oBACP,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,YAAY;iBACpB;aACF;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,SAAS,EAAE,GAAG;gBACd,OAAO,EAAE;oBACP,EAAE,EAAE,GAAG;oBACP,KAAK,EAAE,YAAY;iBACpB;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,eAAe,CAAC,uBAAuB,EAAE,UAAA,MAAM;QAC7C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC3B,aAAa,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;YACrB;gBACE,EAAE,EAAE,GAAG;gBACP,SAAS,EAAE,GAAG;gBACd,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;aACb;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,SAAS,EAAE,GAAG;gBACd,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE;oBACN,EAAE,EAAE,GAAG;oBACP,SAAS,EAAE,GAAG;oBACd,QAAQ,EAAE,IAAI;iBACf;aACF;SACF,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,eAAe,CAAC,0BAA0B,EAAE,UAAA,MAAM;QAChD,aAAa,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,eAAe,CAAC,0BAA0B,EAAE,UAAA,MAAM;QAChD,aAAa,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,yBAAyB,KAAa,EAAE,EAA0B,EAAE,OAAwB;QAAxB,uBAAwB,GAAxB,eAAwB;QAC1F,IAAI,EAAE,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,CAAC;QAC5B,EAAE,CAAC,KAAK,EAAE,UAAC,IAAI;YACb,QAAQ,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK;gBAC3B,IAAI,SAAS,GAAG,qBAAqB,CAAC;gBACtC,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE;oBAC1B,IAAI,cAAc,GAAG,IAAI,oBAAoB,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;oBAC/E,IAAI,MAAM,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAE,CAAC;oBAChD,MAAM,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;oBACzC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,UAAA,OAAO;wBACzB,EAAE,CAAC,OAAO,CAAC,CAAC;wBACZ,IAAI,EAAE,CAAC;oBACT,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,uBAAuB,MAAM;IAC3B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;IACrC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;AACtC,CAAC;AAED,mBAAmB,KAAK,EAAE,SAAS,EAAE,EAAE;IACrC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,6CAA6C,CAAC,CAAC;IAC1E,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,oCAAoC,CAAC,CAAC;IAEnE,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACpC,IAAI,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAExC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAC1D,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CACpD,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CACnE,CAAC,CAAC;IAEH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAC1D,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CACpD,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CACnE,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAC/D,CAAC,CAAC;IAEH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CACvD,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CACnE,CAAC,CAAC;IAEH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,CACvD,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAC9B,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CACnE,CAAC,CAAC;IAEH,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,yBAAyB,GAAG;IAC1B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,uBAAuB,GAAG;IACxB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACrC,CAAC","file":"spec/integrationtest_query_spec.js","sourcesContent":["import odataQueryEngine = require(\"../src/adapter/query_engine\");\nimport sparqlProviderModule = require(\"../src/sparql/sparql_provider\");\nimport rdfstore = require(\"rdfstore\");\n\ndescribe(\"The query engine should evaluate\", () => {\n\n  createQuerySpec(\"/Posts\", answer => {\n    let result = answer.result;\n    expectSuccess(answer);\n    expect(result.length).toBe(2);\n    expect(result[0].Id).toBe(\"1\");\n    expect(result[1].Id).toBe(\"2\");\n  });\n\n  createQuerySpec(\"/Posts?$expand=Content\", answer => {\n    let result = answer.result;\n    expectSuccess(answer);\n    expect(result).toEqual([\n      {\n        Id: \"1\",\n        ContentId: \"1\",\n        Content: {\n          Id: \"1\",\n          Title: \"Post Nr. 1\",\n        },\n      },\n      {\n        Id: \"2\",\n        ContentId: \"2\",\n        Content: {\n          Id: \"2\",\n          Title: \"Post Nr. 2\",\n        },\n      },\n    ]);\n  });\n\n  createQuerySpec(\"/Posts?$expand=Parent\", answer => {\n    let result = answer.result;\n    expectSuccess(answer);\n    expect(result).toEqual([\n      {\n        Id: \"1\",\n        ContentId: \"1\",\n        ParentId: null,\n        Parent: null,\n      },\n      {\n        Id: \"2\",\n        ContentId: \"2\",\n        ParentId: \"1\",\n        Parent: {\n          Id: \"1\",\n          ContentId: \"1\",\n          ParentId: null,\n        },\n      },\n    ]);\n  }, true);\n\n  createQuerySpec(\"/Posts?$filter=Id eq '1'\", answer => {\n    expectSuccess(answer);\n    expect(answer.result.length).toBe(1);\n  }, true);\n\n  createQuerySpec(\"/Posts?$filter=Id eq '0'\", answer => {\n    expectSuccess(answer);\n    expect(answer.result.length).toBe(0);\n  }, true);\n\n  function createQuerySpec(query: string, cb: (results: any) => void, pending: boolean = false) {\n    let fn = pending ? xit : it;\n    fn(query, (done) => {\n      rdfstore.create((error, store) => {\n        let graphName = \"http://example.org/\";\n        storeSeed(store, graphName, () => {\n          let sparqlProvider = new sparqlProviderModule.SparqlProvider(store, graphName);\n          let engine = new odataQueryEngine.QueryEngine();\n          engine.setSparqlProvider(sparqlProvider);\n          engine.query(query, results => {\n            cb(results);\n            done();\n          });\n        });\n      });\n    });\n  }\n});\n\nfunction expectSuccess(answer) {\n  expect(answer.error).toBeUndefined();\n  expect(answer.result).toBeDefined();\n}\n\nfunction storeSeed(store, graphName, cb) {\n  store.rdf.setPrefix(\"rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n  store.rdf.setPrefix(\"disco\", \"http://disco-network.org/resource/\");\n\n  let graph = store.rdf.createGraph();\n  let node = createNamedNode.bind(store);\n  let literal = createLiteral.bind(store);\n\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post1\"), node(\"rdf:type\"), node(\"disco:Post\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post1\"), node(\"disco:id\"), literal(\"1\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post1\"), node(\"disco:content\"), node(\"disco:content1\")\n  ));\n\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post2\"), node(\"rdf:type\"), node(\"disco:Post\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post2\"), node(\"disco:id\"), literal(\"2\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post2\"), node(\"disco:content\"), node(\"disco:content2\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:post2\"), node(\"disco:parent\"), node(\"disco:post1\")\n  ));\n\n  graph.add(store.rdf.createTriple(\n    node(\"disco:content1\"), node(\"disco:id\"), literal(\"1\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:content1\"), node(\"disco:title\"), literal(\"Post Nr. 1\")\n  ));\n\n  graph.add(store.rdf.createTriple(\n    node(\"disco:content2\"), node(\"disco:id\"), literal(\"2\")\n  ));\n  graph.add(store.rdf.createTriple(\n    node(\"disco:content2\"), node(\"disco:title\"), literal(\"Post Nr. 2\")\n  ));\n\n  store.insert(graph, graphName, cb);\n}\n\nfunction createNamedNode(str) {\n  return this.rdf.createNamedNode(this.rdf.resolve(str));\n}\n\nfunction createLiteral(str) {\n  return this.rdf.createLiteral(str);\n}\n"],"sourceRoot":"/source/"}